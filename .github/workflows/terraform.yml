name: Terraform Deployment

on:
  push:
    branches:
      - feature/*   # Trigger terraform plan on feature branches
      - dev         # Trigger terraform apply on the dev branch
  pull_request:
    branches:
      - dev         # For creating pull requests to dev

permissions:
  id-token: write
  contents: read

jobs:
  terraform:
    name: Terraform Init, Plan, and Apply
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      # Step to login to Azure using OIDC (keep this step)
      - name: Login to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Set environment variables for Terraform to use Service Principal auth
      - name: Set Terraform Azure credentials
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.AZURE_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Cache Terraform Providers
        uses: actions/cache@v2
        with:
          path: ~/.terraform.d/plugin-cache
          key: terraform-${{ runner.os }}-${{ hashFiles('**/*.tf') }}
          restore-keys: terraform-${{ runner.os }}-

      # Terraform Init is required for both plan and apply
      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

      # Run Terraform Plan only on feature branches
      - name: Terraform Plan
        if: github.ref == 'refs/heads/feature'   # Conditional check for feature branch
        run: terraform plan -var-file=dev_terraform.tfvars -out=plan.out

      # Run Terraform Apply only on the dev branch
      #- name: Terraform Apply
       # if: github.ref == 'refs/heads/dev'       # Conditional check for dev branch
       # run: terraform apply -auto-approve plan.out
